{
  "en": {
    "message": {
      "input_name" : "Insert name: ",
      "input_soundtrack" : "Insert soundtrack name: ",
      "input_realhero" : "Is it real hero? (true/t/y, default: false) ",
      "input_has_toothpick": "Does it has toothpick? (true/t/y, default: false) ",
      "input_car_name": "Insert car name. If it is not exist insert \"null\" / or empty line.",
      "input_car_cool": "Does it cool? (true/false/t/f):",
      "input_coordinate_x": "Insert coordinate X: ",
      "input_coordinate_y": "Insert coordinate Y (>-897): ",
      "input_mood": "Choose mood: 1 = SORROW, 2 = GLOOM, 3 = APATHY, 4 = CALM, 5 = RAGE (default = RAGE)",
      "input_weapon": "Choose weapon: 1 = AXE, 2 = SHOTGUN, 3 = BAT, 0 = null. (default = shotgun)",
      "input_impact_speed": "Insert ImpactSpeed (ex: 4.61): "
    },
    "error": {
      "same_id": "Found to HumanBeing with same *id*. First will be loaded.",
      "no_args": "Command should contains no args.",
      "one_arg": "Command contains one argument."
    },
    "success": {
      "user_added": "HumanBeing with id - %id% added."
    },
    "unsuccessful": {
      "user_not_added": "HumanBeing wasn't added."
    },
    "command_description": {
      "help": "display info about all commands.",
      "info": "display information about the collection.",
      "show": "display all HumanBeing.",
      "add": "add new HumanBeing.",
      "add_if_min": "add a new element to the collection if its ImpactSpeed value is greater than the value of the largest element in this collection.",
      "add_if_max": "add a new element to the collection if its ImpactSpeed value is less than that of the smallest element in this collection.",
      "update": "update the value of the collection element whose id is equal to the given one.",
      "remove_by_id": "removing HumanBeing with given id.",
      "clear": "clear collection.",
      "save": "save collection to file.",
      "history": "display the last 15 commands without arguments",
      "exit": "end program (without saving).",
      "execute_script": "read and execute a script from the specified file.",
      "max_by_impact_speed": "display any object from the collection whose impactSpeed field value is the maximum.",
      "count_by_mood": "display the number of elements whose mood field value is equal to the specified value.",
      "print_ascending": "display the elements of the collection in ascending order.",
      "language": "choose language program."
    }
  },
  "ru": {
    "message": {
      "input_name" : "Введите имя: ",
      "input_soundtrack" : "Введите название саундтрека: ",
      "input_realhero" : "Это реальный герой? (true/t/y, default: false) ",
      "input_has_toothpick" : "У него есть зубочистка? (true/t/y, default: false) ",
      "input_car_name" : "Введите название машины. Если ее нет, то введите null/пустую строку",
      "input_car_cool" : "Введите крутая ли она? (true/false/t/f):",
      "input_coordinate_x" : "Введите координату X: ",
      "input_coordinate_y" : "Введите координату Y (больше -897): ",
      "input_mood" : "Выберите настроение: 1 = SORROW, 2 = GLOOM, 3 = APATHY, 4 = CALM, 5 = RAGE (default = RAGE)",
      "input_weapon" :"Выберите оружие: 1 = AXE, 2 = SHOTGUN, 3 = BAT, 0 = null. (default = shotgun)",
      "input_impact_speed" :"Введите ImpactSpeed (ex: 4.61): "
    },
    "error": {
      "same_id": "Найдено два пользователя с одинаковым id. Загружен первый из них.",
      "no_args": "Команда не должна содержать аргументы.",
      "one_arg": "Команда содержит один аргумент."
    },
    "success": {
      "user_added": "Пользователь с %id% успешно добавлен."
    },
    "unsuccessful": {
      "user_not_added": "Не удалось добавить пользователя"
    },
    "command_description": {
      "help": "вывести справку о всех командах.",
      "info": "вывести информацию о коллекции.",
      "show": "вывести всех сущностей HumanBeing.",
      "add": "добавляет новую сущность HumanBeing.",
      "add_if_min": "добавить новый элемент в коллекцию, если его значение ImpactSpeed превышает значение наибольшего элемента этой коллекции.",
      "add_if_max": "добавить новый элемент в коллекцию, если его значение ImpactSpeed меньше, чем у наименьшего элемента этой коллекции.",
      "update": "обновить значение элемента коллекции, id которого равен заданному.",
      "remove_by_id": "удалить элемент из коллекции по его id.",
      "clear": "очистить коллекцию.",
      "save": "сохранить коллекцию в файл.",
      "history": "вывести последние 15 команд без аргументов.",
      "exit": "завершить программу (без сохранения в файл).",
      "execute_script": "считать и исполнить скрипт из указанного файла.",
      "max_by_impact_speed": "вывести любой объект из коллекции, значение поля impactSpeed которого является максимальным.",
      "count_by_mood": "вывести количество элементов, значение поля mood которых равно заданному.",
      "print_ascending": "вывести элементы коллекции в порядке возрастания.",
      "language": "выбор языка."
    }
  }
}